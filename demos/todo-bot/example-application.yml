
teams:
  storage:
#    Enable this for persistent storage of chat data
#    type: blob
#    connection-string: DefaultEndpointsProtocol=https;AccountName=<your account name>;AccountKey=<some key>;EndpointSuffix=core.windows.net
  app:
    tennantId: 
  bot:
    MicrosoftAppPassword: <password>
    MicrosoftAppId: <appid>

# Remove one of these profiles if you only want to run on a single platform.

spring:
  profiles:
    active: teams,symphony

symphony:
  # allows instances of the bot to coordinate and choose a leader
  #stream:
  #  coordination-stream-id: y3EJYqKMwG7Jn7_YqyYdiX___pR3YrnTdA==
    
  # use if you need an external trust store
  #trust-store:
  #  location: classpath:/example-trust.crt
  #  type: PEMS
  apis:
  - id: develop
    pod:
      url: https://develop.symphony.com/pod
#     proxy:
#       host: <your proxy host>
#       user: <optional>
#       password: <optional>
#       port: <default 8080>
    sessionauth:
      url: https://develop.symphony.com/sessionauth
#     proxy:  as above
    keyauth:
      url: https://develop.symphony.com/keyauth
#     proxy:  as above
    agent: 
      url: https://develop.symphony.com/agent
#     proxy:  as above
    login: 
      url: https://develop.symphony.com/login
    relay:
      url: https://develop.symphony.com/relay

      # in your application.yml file, express your bot identity something like the below:

  bot:
    identity:
      email: evil.bot@example.com
      commonName: evil.bot.on.symphony
      # either specify as a p12...
      password: changeit
      location: file:./some.p12
      # or insert pems into your application.yml
      privateKey:  "-----BEGIN PRIVATE KEY-----\nMIIE...g3x6A==\n-----END PRIVATE KEY-----"
      certificates:
      - "-----BEGIN CERTIFICATE-----\nMIIC7z...xBXKt4=\n-----END CERTIFICATE-----"  